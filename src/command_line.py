from my_args import MyArgs
from my_github import MyGithub
import os




if __name__ == "__main__":
    args = MyArgs()
    args.get_args_from_terminal()
    gh = MyGithub()

    if args.args.config:
        args.get_args_from_config_file_and_overwrite_old_args()

    if not(args.args.local_repo_only):
        print("creating new remote github repository...")
        # gh.create_github_repository(args.args.repository_name)

    if not(args.args.no_venv):
        print("creating venv...")
        os.system("python -m venv .venv")

        with open(".venv.bat", "w") as f:
            f.write("@echo off")
            f.write("\n\n")
            f.write('".venv/Scripts/activate"')

        with open(".venv.sh", "w") as f:
            f.write("#!/bin/bash")
            f.write("\n\n")
            f.write("source .venv/Scripts/activate")

    if not(args.args.no_docs):
        print("creating docs directory...")
        os.system("mkdir docs")

    if not(args.args.no_logs):
        print("creating logs directory...")
        os.system("mkdir logs")

    if not(args.args.no_notes):
        print("creating notes directory...")
        os.system("mkdir notes")

    if not(args.args.no_src):
        print("creating src directory...")
        os.system("mkdir src")

    if not(args.args.no_tests):
        print("creating tests directory...")
        os.system("mkdir tests")

    if not(args.args.no_requirements):
        print("creating requirements.txt file...")
        with open("requirements.txt", "w") as f: pass

    if args.args.gitignore:
        gitignore_template = gh.get_specific_gitignore_template(args.args.gitignore)

        if gitignore_template == None:
            print(f"Error: could not find the '{args.args.gitignore}' gitignore template")

        print("creating .gitignore file...")

        with open(".gitignore", "w") as f:
            f.write(gitignore_template) if gitignore_template != None else None
            f.write("\n\n") if gitignore_template != None else None
            f.write("# extras generated by the 'automate github project start' script\n")
            f.write(".venv.bat\n")
            f.write(".venv.sh\n")
            f.write("\n")

    # os.system(f'echo # {args.args.repository_name} >> README.md')
    # os.system("git init")
    # os.system("git add .")
    # os.system('git commit -m "initial commit"')
    # os.system(f"git remote add origin https://github.com/{gh.user.login}/{args.args.repository_name}.git")
    # os.system("git push -u origin master")